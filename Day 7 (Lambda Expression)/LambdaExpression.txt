Lambda Expression

------------------

first - 

 

LISP - 

 

----

JAVA

?

It is a function programming.

 

anonymous method/Function -no name

no specifier, no return type

 

Special operator ->

 

Functional Interface - 

The interface which contains one and only abstract method.

 

 

 

 

Case 1:

 

public void display(){

 System.out.println("Lambda Expression");

}

 

()-> System.out.println("Lambda Expression");

 

Case 2:

 

public void display1(int a, int b)

{

System.out.println("Addition :"+(a+b));

}

 

(a,b) ->System.out.println("Addition :"+(a+b));

 

Case 3:

 

public int add(int a, int b){

 return a+b;

}

 

(int a, int b) -> { return a+b;} 

ans=(a, b) ->  a+b; 

ans->a+b;

Complete the Case 4:

 

Case 4:

public int square(int a)

{

return a*a;

}

a->a*a;

 

-----------

Complete the Activity(Comparator) using Lambda Expression

Try the Activity ( Thread) using LambdaExpression